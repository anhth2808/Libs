{"index.js":"const UnitAmount = {\n    \"PENNY\" : 0.01,\n    \"NICKEL\": 0.05,\n    \"DIME\": 0.1,\n    \"QUARTER\": 0.25,\n    \"ONE\": 1,\n    \"FIVE\":\t5,\n    \"TEN\": 10,\n    \"TWENTY\": 20,\n    \"ONE HUNDRED\": 100\n}\n\nfunction fixNumber(number) {\n    return parseFloat(number.toFixed(3));\n}\n\nfunction checkCashRegister(price, cash, cid) {\n    let change = [];\n    // Here is your change, ma'am.\n    let temp = cash - price;\n    let totalCid = 0;\n\n    let result = {\n        status : \"\",\n        change : []\n    }\n    \n\n    for (let i = cid.length - 1; i >= 0 ; i--) {\n        // console.log(cid[i][1])\n        totalCid += cid[i][1];\n        \n    }\n\n    // cash-in-drawer as the value for the key change if it is equal to the change due.\n    if (totalCid === temp) {\n        result.status = \"CLOSED\";\n        result.change = cid;\n        return result;\n    }\n\n    \n    \n    for (let i = cid.length - 1; i >= 0 ; i--) {\n        let unit = UnitAmount[cid[i][0]];\n\n        console.log(\"unit:\", unit);\n        if (temp >= unit) {\n            let timeTemp = parseInt(temp / unit);\n            \n            let timeExist = parseInt(cid[i][1] / unit);\n            // console.log(\"temp:\", temp);\n            // console.log(timeExist, timeTemp);\n\n            let time;\n            //\n            if (timeExist != 0) {\n                time = timeTemp > timeExist ? timeExist : timeTemp;\n            }\n\n            console.log(time);\n\n            if ((cid[i][1] - time * unit) >= 0) {\n                // console.log(\"temp\", temp);\n\n                temp -= time * unit;\n                // fix decimal number\n                temp = fixNumber(temp);\n                \n                totalCid -= time * unit;\n                // fix decimal number\n                totalCid = fixNumber(totalCid);\n\n                console.log(\"totalCid:\",totalCid);\n                change.push([cid[i][0], time * unit]);\n            } \n        }\n    }\n\n    // \n    if (temp) {\n        result.status = \"INSUFFICIENT_FUNDS\";\n        result.change = [];\n        return result;\n    } else {\n        result.status = \"OPEN\";\n        result.change = change;\n        return result;\n    }\n}\n\n// Example cash-in-drawer array:\n// [[\"PENNY\", 1.01],\n// [\"NICKEL\", 2.05],\n// [\"DIME\", 3.1],\n// [\"QUARTER\", 4.25],\n// [\"ONE\", 90],\n// [\"FIVE\", 55],\n// [\"TEN\", 20],\n// [\"TWENTY\", 60],\n// [\"ONE HUNDRED\", 100]]\n\ncheckCashRegister(19.5, 20, [[\"PENNY\", 1.01], [\"NICKEL\", 2.05], [\"DIME\", 3.1], [\"QUARTER\", 4.25], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100]]);"}